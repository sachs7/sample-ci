name: Generate and Deploy Documentation for temp file

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate documentation
        run: |
          pdoc --html --force --output-dir=docs .

      - name: List files in root after generating documentation
        run: ls -la  # Check if 'docs' directory exists

      - name: Upload documentation as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          # name: docs
          # path: docs
          path: build_outputs_folder/

  deploy:
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      needs: build  # Ensures this job runs after the 'build' job
  
      # permissions:
      #   pages: write  # Allow writing to the Pages branch
      #   id-token: write  # Required to authenticate the job
  
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
      # - name: Download documentation artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: docs
  
      # - name: List files after downloading artifact
      #   run: ls -la  # Check current directory for downloaded files
  
      # - name: Checkout gh-pages branch
      #   uses: actions/checkout@v4
      #   with:
      #     ref: gh-pages  # Check out the gh-pages branch
  
      # - name: Set up Git
      #   run: |
      #     git config user.email "up.sachi@gmail.com"
      #     git config user.name "sachs7"
      #     git remote set-url origin https://x-access-token:${{ secrets.SACHS7 }}@github.com/${{ github.repository }}
  
      # - name: Verify remote URL
      #   run: git remote -v
  
      # - name: List docs directory before copying
      #   run: ls -la sample-ci  # Check if the docs directory has files
  
      # - name: Copy docs to gh-pages branch
      #   run: |
      #     cp -r sample-ci/* .  # Copy the generated docs to the root of the gh-pages branch
  
      # - name: Ensure gh-pages branch is clean
      #   run: |
      #     git add -A
      #     git commit -m "Update documentation" || echo "No changes to commit"
  
      # - name: Deploy to GitHub Pages
      #   run: |
      #     git push origin gh-pages  # Push changes to the gh-pages branch
